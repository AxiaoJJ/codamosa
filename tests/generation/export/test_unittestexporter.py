#  This file is part of Pynguin.
#
#  SPDX-FileCopyrightText: 2019â€“2020 Pynguin Contributors
#
#  SPDX-License-Identifier: LGPL-3.0-or-later
#
import pynguin.testcase.defaulttestcase as dtc
from pynguin.generation.export.unittestexporter import UnitTestExporter


def test_export_sequence(exportable_test_case, tmp_path):
    path = tmp_path / "generated.py"
    exporter = UnitTestExporter()
    exporter.export_sequences(str(path), [exportable_test_case, exportable_test_case])
    assert (
        path.read_text()
        == """# Automatically generated by Pynguin.
import unittest
import tests.fixtures.accessibles.accessible as module0


class GeneratedTestSuite(unittest.TestCase):

    def test_case_0(self):
        var0 = 5
        var1 = module0.SomeType(var0)
        assert var1 == 5

    def test_case_1(self):
        var0 = 5
        var1 = module0.SomeType(var0)
        assert var1 == 5
"""
    )


def test_export_sequence_empty(tmp_path):
    path = tmp_path / "generated.py"
    exporter = UnitTestExporter()
    exporter.export_sequences(str(path), [])
    assert (
        path.read_text()
        == """# Automatically generated by Pynguin.
import unittest


class GeneratedTestSuite(unittest.TestCase):
    pass
"""
    )


def test_export_sequence_empty_test_case(tmp_path):
    path = tmp_path / "generated.py"
    exporter = UnitTestExporter()
    exporter.export_sequences(str(path), [dtc.DefaultTestCase()])
    assert (
        path.read_text()
        == """# Automatically generated by Pynguin.
import unittest


class GeneratedTestSuite(unittest.TestCase):

    def test_case_0(self):
        pass
"""
    )
